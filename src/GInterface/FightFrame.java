/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GInterface;

import PokemonAluminum.Habil;
import PokemonAluminum.Item;
import PokemonAluminum.Personagem;
import PokemonAluminum.Pokeball;
import PokemonAluminum.Pokemon;
import PokemonAluminum.Potion;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;

/**
 *
 * @author junior
 */
public class FightFrame extends javax.swing.JFrame {

    Pokemon a, b;
    Personagem p;
    //Habilidades h, h1;

    /**
     * Creates new form FightFrame
     */
    public FightFrame(Personagem p, Pokemon b) {
        this.a =p.getPoke(0);
        this.b = b;
        this.p=p;
        ImageIcon photob = new ImageIcon(System.getProperty("user.dir") + "\\src\\icons\\pokegif\\" + b.getId() + ".gif", "");
        initComponents();
        jLabel2.setIcon(photob);
        jTextArea1.setText("");
        lifead.setValue(100);
        lifepl.setValue(100);
        this.setData();
    }

    private FightFrame() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        plPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        adPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        lifepl = new javax.swing.JProgressBar();
        lifead = new javax.swing.JProgressBar();
        Skill1 = new javax.swing.JButton();
        Skill2 = new javax.swing.JButton();
        Skill3 = new javax.swing.JButton();
        Skill4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        plPanel.setBackground(new java.awt.Color(255, 255, 255));
        plPanel.setToolTipText("");
        plPanel.setLayout(new java.awt.BorderLayout());

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setForeground(new java.awt.Color(204, 204, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        plPanel.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(plPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 90));

        adPanel.setBackground(new java.awt.Color(255, 255, 255));
        adPanel.setLayout(new java.awt.BorderLayout());

        jLabel2.setBackground(new java.awt.Color(204, 204, 255));
        jLabel2.setForeground(new java.awt.Color(204, 204, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adPanel.add(jLabel2, java.awt.BorderLayout.CENTER);

        getContentPane().add(adPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 110, 90));

        jButton1.setText("Fugir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 267, 330, 90));
        getContentPane().add(lifepl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 100, -1));
        getContentPane().add(lifead, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 100, -1));

        Skill1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Skill1ActionPerformed(evt);
            }
        });
        getContentPane().add(Skill1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 120, 20));

        Skill2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Skill2ActionPerformed(evt);
            }
        });
        getContentPane().add(Skill2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 120, 20));

        Skill3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Skill3ActionPerformed(evt);
            }
        });
        getContentPane().add(Skill3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 120, 20));

        Skill4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Skill4ActionPerformed(evt);
            }
        });
        getContentPane().add(Skill4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 120, 20));

        jScrollPane2.setViewportView(jPanel1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 330, 150));

        jButton2.setText("Itens");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        jButton3.setText("Pokes");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Skill1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Skill1ActionPerformed
        ataque(this.a,a.getHabilidades()[0],this.b);
        ataque(this.b,b.getHabilidades()[(int)Math.round(Math.random()*3)],this.a);
        // TODO add your handling code here:
    }//GEN-LAST:event_Skill1ActionPerformed

    private void Skill2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Skill2ActionPerformed
        ataque(this.a,a.getHabilidades()[1],this.b);
        ataque(this.b,b.getHabilidades()[(int)Math.round(Math.random()*3)],this.a);
// TODO add your handling code here:
    }//GEN-LAST:event_Skill2ActionPerformed

    private void Skill3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Skill3ActionPerformed
        ataque(a,a.getHabilidades()[2],b);
        ataque(b,b.getHabilidades()[(int)Math.round(Math.random()*3)],a);
// TODO add your handling code here:
    }//GEN-LAST:event_Skill3ActionPerformed

    private void Skill4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Skill4ActionPerformed
        ataque(a,a.getHabilidades()[3],b);
        ataque(b,b.getHabilidades()[(int)Math.round(Math.random()*3)],a);
// TODO add your handling code here:
    }//GEN-LAST:event_Skill4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    this.atualizaItens();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    this.atualizaPokes();// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FightFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FightFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FightFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FightFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FightFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Skill1;
    private javax.swing.JButton Skill2;
    private javax.swing.JButton Skill3;
    private javax.swing.JButton Skill4;
    private javax.swing.JPanel adPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JProgressBar lifead;
    private javax.swing.JProgressBar lifepl;
    private javax.swing.JPanel plPanel;
    // End of variables declaration//GEN-END:variables
public void setEvent(String s) {
        jTextArea1.setText(jTextArea1.getText() + s+"\n");
    }

    public void setHabils() {
        for(int i=0;i<4;i++){
             String s= a.getHabilidades()[i].getNome();
        
            if (Skill1.getText().equals("")) {
                Skill1.setText(s);
            } else if (Skill2.getText().equals("")) {
                Skill2.setText(s);
            } else if (Skill3.getText().equals("")) {
                Skill3.setText(s);
            } else {
                Skill4.setText(s);
            }
        }
    }
    public void setData(){
        jLabel1.setIcon(new ImageIcon(System.getProperty("user.dir") + "\\src\\icons\\pokegif\\" + a.getId() + ".gif", ""));
        this.setHabils();
        this.attLifes();
        this.jTextArea1.setText("");
    }
    public void baixaLife(Pokemon a, int i) {
        if (a == this.a) {
            lifead.setValue((lifead.getValue() - i));
            
        }
        if (a == this.b) {
            lifepl.setValue(lifepl.getValue() - i);
           
        }
    }

   /* public void Skill(int i) {
        h.usaSkill(a.getHabilidades()[i]);
        h1.usaSkill(b.getHabilidades()[(int)Math.round(int)Math.round(Math.random() * 3)]);
        if (a.getLife() <= 0) {
            JOptionPane.showMessageDialog(null, "Você morreu");
            a.setLose(a.getWl()[1] + 1);
            a.reset();
            b.reset();
            a.atualizaCampo();
            this.dispose();
        } else if (b.getLife() <= 0) {
            a.setXp(a.getXpNext()+(int)Math.round(((double)b.getNivel()-a.getNivel())*(a.getXpNext()*0.3)));
            a.setWin(a.getWl()[0] + 1);
            a.reset();
            JOptionPane.showMessageDialog(null, "Você Venceu!\n Seu " + a.getNome() + " Está nivel " + a.getNivel());
            b.reset();
            a.atualizaCampo();
            this.dispose();
        }
    }*/
    
    public void ataque(Pokemon e1,Habil h, Pokemon e2) {
    String evento="";
    int dmg=0,debuffDmg=0;
	if(e2.getTurnos()!=0){		

		if(e2.getDebuff().equals("Poison")){
                    debuffDmg=e2.getLife() - (int)Math.round(e2.getLifeFixo()*0.1);
                    e2.setLife(debuffDmg);				
                }

		if(e2.getDebuff().equals("Burn")){
		debuffDmg=e2.getLife() - (int)Math.round(e2.getLifeFixo()*0.1);
                e2.setLife(debuffDmg);
                }

		if(e2.getDebuff().equals("Ataque-")){
		e2.setAtaque(e2.getAtaque() - (int)Math.round(e2.getAtrBase()[0]*0.1));				
		}
		if(e2.getDebuff().equals("Defesa-")){
		e2.setDefesa(e2.getDefesa() - (int)Math.round(e2.getAtrBase()[1]*0.1));				
		}

		e2.setTurnos(e2.getTurnos()-1);
		if(e2.getTurnos()==0){
		e2.setDebuff("");	
		}
		
	}

	if(! (e1.getDebuff().equals("Blindness") || e1.getDebuff().equals("Paralysis") || e1.getDebuff().equals("Stun") || e1.getDebuff().equals("Sleep")) ){
	 evento+= e1.getNome()+" usou "+ h.getNome();
	if(h.getTipo().contains("Ataque")){
        dmg = Math.round ((e1.getAtaque() - e2.getDefesa()) * h.getMultiplicador()*checkElement(h.getElemento(),e2.getElemento()));
	        if (dmg > 0) {
        	    e2.setLife(e2.getLife() - dmg);
            	if(checkElement(h.getElemento(),e2.getElemento())==2){
			evento+=" \n e foi SUPER efetivo!";
		}
                       evento+=" com: " + dmg + " de dano";
                                          this.baixaLife(e1, (dmg * 100 / e2.getLifeFixo()));
        	} else {
            evento+= " e falhou!";
        	}
                
                // DEBBUG
                     if(e1==this.a){ 
                         System.out.println("Ataque A:"+e1.getAtaque());
                       System.out.println("Defesa B:"+e2.getDefesa());
                       System.out.println("dmg:"+dmg);
                       System.out.println("Dano pela função:"+(e1.getAtaque() - e2.getDefesa()) * h.getMultiplicador()*checkElement(h.getElemento(),e2.getElemento()));
                     }}
		
	if(h.getTipo().contains("Debuff")){
		if(Math.random()<=h.getChance()){
			e2.setDebuff(h.getEfeito());
			e2.setTurnos(h.getTurnos());
			evento+="\n"+e2.getNome()+" foi afetado por "+h.getEfeito();
		}		
		else{
			evento+=", "+h.getEfeito()+" falhou";
		}
	}
	
		if(h.getTipo().contains("Buff")){
			if(Math.random()<=h.getChance()){
				if(h.getEfeito().equals("Ataque+")){
                                   
                                    System.out.println("Ataque anterior:"+e1.getAtaque());
                                    System.out.println("Novo ataque:"+Math.round(e1.getAtaque()+(float)e1.getAtrBase()[0]*h.getMultiplicador()));
				 e1.setAtaque((int)Math.round(e1.getAtaque()+e1.getAtrBase()[0]*h.getMultiplicador()));
                                    System.out.println("getatrbbase[0]:"+e1.getAtrBase()[0]);
                                    System.out.println("Multiplicador:"+h.getMultiplicador());
                                    System.out.println("Multiplicador*getATrbase"+e1.getAtrBase()[0]*h.getMultiplicador());
                                    
                                   
				 evento+="\n ataque aumentado com sucesso!";					
				
                                }
				if(h.getEfeito().equals("Defesa+")){
				 e1.setDefesa((int)Math.round(e1.getDefesa()+e1.getAtrBase()[1]*h.getMultiplicador()));
				evento+="\n defesa aumentada com sucesso!";					
				}
				if(h.getEfeito().equals("Life+")){
				 e1.setLife((int)Math.round(e1.getLife()+e1.getAtrBase()[2]*(h.getMultiplicador()-1)));
				evento+=String.valueOf((int)Math.round(e1.getAtrBase()[2]*(h.getMultiplicador()-1)))+"\n de hp recuperados";					
				}													
			}	

			else{
			evento+=" efeito especial falhou";
			}	
		}

	this.setEvent(evento);
	attLifes();}
else{
	evento+="\n"+e1.getNome()+" Está afetado por "+e1.getDebuff()+" e perdeu a vez";
	this.setEvent(evento);
}
        
        if (this.a.getLife() <= 0) {
            this.a.setLose();
            JOptionPane.showMessageDialog(null, "Você morreu");
            this.a.reset();
            this.b.reset();
            this.a.atualizaCampo();
            this.dispose();
        } else if (this.b.getLife() <= 0) {
            this.a.setXp(e1.getXpNext()+(int)Math.round(((double)e2.getNivel()-e1.getNivel())*(e1.getXpNext()*0.3)));
            this.a.setWin();
            this.a.reset();
            this.b.reset(); 
            this.a.atualizaCampo();
            JOptionPane.showMessageDialog(null, "Você Venceu!\n Seu " + e1.getNome() + " Está nivel " + e1.getNivel());
            this.dispose();
        }/*if(this.a.getLife() <= 0 || this.b.getLife() <= 0){
            this.dispose();
            this.a.reset();
            e1.atualizaCampo();
            this.b.reset();
        }*/
    }
public void attLifes(){
lifead.setValue((int)Math.round(b.getLife()*100/b.getLifeFixo()));
lifepl.setValue((int)Math.round(a.getLife()*100/a.getLifeFixo()));
}

public float checkElement(String a, String b){
    if(a.equals("Fogo") && b.equals("Planta")){
    return 2;
    }
    if(a.equals("Planta") && b.equals("Água")){
    return 2;
    }    
    if(a.equals("Água") && b.equals("Fogo")){
    return 2;
    }
    if(a.equals("Voador") && b.equals("Inseto")){
    return 2;
    }
    return 1;
    }
public void useItem(Item i){
    if(i.getType().equals("Potion")){
    this.a.setLife(Math.round(this.a.getLife()+((Potion) i).getQt()));
    attLifes();
    }else if(i.getType().equals("Pokeball")){
    if(Math.random()<((Pokeball) i).getChance()){
    jLabel2.setIcon(new ImageIcon(System.getProperty("user.dir") + "\\src\\icons\\items\\" + i.getName() + ".png", ""));
    this.setEvent(b.getNome()+" Selvagem Capturado!");
    JOptionPane.showMessageDialog(this, b.getNome()+" Selvagem Capturado!", "Parabéns", INFORMATION_MESSAGE, new ImageIcon(System.getProperty("user.dir")+"\\src\\icons\\pokegif\\"+b.getId()+".gif",""));
    b.setFrame(a.getFrame());
    p.setPoke(b);
    p.getPoke(0).getFrame().setData();
    this.dispose();
    }
    
    }
    
    
       
}

public void atualizaItens(){
     jPanel1.removeAll();
    int size=p.getItens().size();
    ItemPanel[] ip= new ItemPanel[size];
        for(int i=0;i<size;i++){
        ip[i]= new ItemPanel(p.getItens().get(i));
        ip[i].setData();
        jPanel1.add(ip[i]);
        }
        jPanel1.revalidate();
}
public void atualizaPokes(){
    
    if(p.getPokes().size()>1){
        jPanel1.removeAll();
        MiniPokePanel[] pp= new MiniPokePanel[3];
        for(int i=1;i<p.getPokes().size()&&i<4;i++){
        pp[i-1]= new MiniPokePanel(p.getPokes().get(i));
        pp[i-1].setData();
        jPanel1.add(pp[i-1]);
        jPanel1.revalidate();
    }}
    else{
    JOptionPane.showMessageDialog(this, "Você não tem outros pokemons");
    }

}
    @Override
public void dispose(){
super.dispose();
a.getFrame().map.searchMonster();
}

}
