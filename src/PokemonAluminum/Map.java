package PokemonAluminum;


import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import static java.lang.Thread.State.WAITING;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.border.EtchedBorder;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Igor
 */
public class Map extends javax.swing.JFrame {

    ImageIcon i,monst;
//    BackgroundMap m = new BackgroundMap();
    short n;
    File file = new File(System.getProperty("user.dir")+"\\src\\icons\\pokemons");
    boolean found;
    Pokemon a,b;
   Habilidades h;
  Habilidades h1;
  FightFrame f1;
  Pokemon[] poke= new Pokemon[5];
        Pokemon bulba= new Pokemon();
	int[]attrib1 = {80,70,160};
	int[]habil1={1,2,3,7};
        Pokemon charmander = new Pokemon();
	int[]attrib2={100,50,140};
	int[]habil2={1,2,3,4};
        Pokemon weedle = new Pokemon();
	int[]attrib5={50,50,140};
	int[]habil5={1,2,3,6};
        Pokemon squirtle = new Pokemon();
	int[]attrib3={70,80,130};
	int[]habil3={1,2,3,5};
        Pokemon caterpie = new Pokemon();
	int[]attrib4={30,30,150};
	int[]habil4={1,2,3,7};
    /**
     * Creates new form Map
     */
    @SuppressWarnings("empty-statement")
    public Map(BackgroundMap m) {
        initComponents();
        bg.add(m);
        headerEvento.setText("                      ");
        monsterimg.setText("                ");
        fightbutton.setVisible(false);
        leaveButton.setVisible(false);
   	
	bulba.setId(1);
        bulba.setNome("bulbassauro");
        bulba.setAtrBase(attrib1);
        bulba.setAtaque(attrib1[0]);
        bulba.setDefesa(attrib1[1]);
        bulba.setLifeFixo(attrib1[2]);
        bulba.setLife(attrib1[2]);
        bulba.setHabilidades(habil1);
		
	charmander.setId(2);
        charmander.setNome("Charmander");
        charmander.setAtrBase(attrib2);
        charmander.setAtaque(attrib2[0]);
        charmander.setDefesa(attrib2[1]);
        charmander.setLifeFixo(attrib2[2]);
        charmander.setLife(attrib2[2]);
        charmander.setHabilidades(habil2);

	squirtle.setId(3);
        squirtle.setNome("Squirtle");
        squirtle.setAtrBase(attrib3);
        squirtle.setAtaque(attrib3[0]);
        squirtle.setDefesa(attrib3[1]);
        squirtle.setLifeFixo(attrib3[2]);
        squirtle.setLife(attrib3[2]);
        squirtle.setHabilidades(habil3);

	
	
	caterpie.setId(4);
        caterpie.setNome("Caterpie");
        caterpie.setAtrBase(attrib4);
        caterpie.setAtaque(attrib4[0]);
        caterpie.setDefesa(attrib4[1]);
        caterpie.setLifeFixo(attrib4[2]);
        caterpie.setLife(attrib4[2]);
        caterpie.setHabilidades(habil4);

	
	
	weedle.setId(5);
        weedle.setNome("Weedle");
        weedle.setAtrBase(attrib5);
        weedle.setAtaque(attrib5[0]);
        weedle.setDefesa(attrib5[1]);
        weedle.setLifeFixo(attrib5[2]);
        weedle.setLife(attrib5[2]);
        weedle.setHabilidades(habil5);

	poke[0]=bulba;
        poke[1]=charmander;
        poke[2]=squirtle;
        poke[3]=caterpie;
        poke[4]=weedle;
    }

    private Map() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        upButton = new javax.swing.JButton();
        leftButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        rightButton = new javax.swing.JButton();
        bg = new javax.swing.JPanel();
        personagem = new javax.swing.JLabel();
        eventoPanel = new javax.swing.JPanel();
        headerEvento = new javax.swing.JLabel();
        monsterimg = new javax.swing.JLabel();
        fightbutton = new javax.swing.JButton();
        leaveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(213, 213, 253));
        setResizable(false);

        upButton.setText("▲");
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });

        leftButton.setText("◄ ");
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });

        downButton.setText("▼");
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });

        rightButton.setText("►");
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });

        bg.setLayout(new java.awt.BorderLayout());

        personagem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bg.add(personagem, java.awt.BorderLayout.CENTER);

        eventoPanel.setBackground(new java.awt.Color(196, 199, 211));
        eventoPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        eventoPanel.setMinimumSize(new java.awt.Dimension(438, 85));
        eventoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerEvento.setText("Mensagem Oculta");
        eventoPanel.add(headerEvento, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        monsterimg.setText("Fotinha");
        eventoPanel.add(monsterimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 89, 85));

        fightbutton.setText("Lutar!");
        fightbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fightbuttonActionPerformed(evt);
            }
        });
        eventoPanel.add(fightbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 51, -1, -1));

        leaveButton.setText("Deixar");
        leaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveButtonActionPerformed(evt);
            }
        });
        eventoPanel.add(leaveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 51, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(eventoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(leftButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(upButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(downButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rightButton)
                .addGap(75, 75, 75))
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(upButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(downButton)
                            .addComponent(leftButton)
                            .addComponent(rightButton)))
                    .addComponent(eventoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
    
        n = (short) Math.abs(n - 1);
        i = new ImageIcon(System.getProperty("user.dir")+"\\src\\icons\\character\\up" + String.valueOf(n) + ".png", "");
        personagem.setIcon(i);
        personagem.setLocation((int) personagem.getLocation().getX(), (int) personagem.getLocation().getY() - 10);
        searchMonster();
       if(found){
               leftButton.setEnabled(false);
               rightButton.setEnabled(false);
               upButton.setEnabled(false);
               downButton.setEnabled(false);
       }
personagem.repaint();    }//GEN-LAST:event_upButtonActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        // TODO add your handling code here:
    
        n = (short) Math.abs(n - 1);
        i = new ImageIcon(System.getProperty("user.dir")+"\\src\\icons\\character\\down"  + String.valueOf(n) + ".png", "");
        personagem.setIcon(i);
        personagem.setLocation((int) personagem.getLocation().getX(), (int) personagem.getLocation().getY() + 10);
        
        searchMonster();
         if(found){
               leftButton.setEnabled(false);
               rightButton.setEnabled(false);
               upButton.setEnabled(false);
               downButton.setEnabled(false);
       }
           
    }//GEN-LAST:event_downButtonActionPerformed

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
      
        n = (short) Math.abs(n - 1);
        i = new ImageIcon(System.getProperty("user.dir")+"\\src\\icons\\character\\left" + String.valueOf(n) + ".png", "");
        personagem.setIcon(i);
        personagem.setLocation((int) personagem.getLocation().getX() - 10, (int) personagem.getLocation().getY());
      
        searchMonster();
        if(found){
               leftButton.setEnabled(false);
               rightButton.setEnabled(false);
               upButton.setEnabled(false);
               downButton.setEnabled(false);
       }
personagem.repaint();    }//GEN-LAST:event_leftButtonActionPerformed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
     
        n = (short) Math.abs(n - 1);
        i = new ImageIcon(System.getProperty("user.dir")+"\\src\\icons\\character\\right" + String.valueOf(n) + ".png", "");
        personagem.setIcon(i);
        personagem.setLocation((int) personagem.getLocation().getX() + 10, (int) personagem.getLocation().getY());
        
        searchMonster();
        if(found){
               leftButton.setEnabled(false);
               rightButton.setEnabled(false);
               upButton.setEnabled(false);
               downButton.setEnabled(false);
       }
personagem.repaint();    }//GEN-LAST:event_rightButtonActionPerformed

    private void leaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveButtonActionPerformed

               leftButton.setEnabled(true);
               rightButton.setEnabled(true);
               upButton.setEnabled(true);
               downButton.setEnabled(true);
              // TODO add your handling code here:
    }//GEN-LAST:event_leaveButtonActionPerformed

    private void fightbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fightbuttonActionPerformed
        
        f1= new FightFrame(a, b);
        h= new Habilidades(f1);
        h1= new Habilidades(f1);
        h.ad=b;
        h.pl=a;
        h1.setAd(a);
        h1.setPl(b);
        f1.h=h;
        f1.h1=h1;
        h.setButtonsName(a.getHabilidades());
        f1.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_fightbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Map().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JButton downButton;
    private javax.swing.JPanel eventoPanel;
    private javax.swing.JButton fightbutton;
    private javax.swing.JLabel headerEvento;
    private javax.swing.JButton leaveButton;
    private javax.swing.JButton leftButton;
    private javax.swing.JLabel monsterimg;
    private javax.swing.JLabel personagem;
    private javax.swing.JButton rightButton;
    private javax.swing.JButton upButton;
    // End of variables declaration//GEN-END:variables


    void searchMonster() {
        if (Math.random() > 0.95) {
            headerEvento.setText(".!:.!:.Monstro encontrado:.!.:!.");
            int count = file.listFiles().length;
            do{
            count= (int)Math.round(Math.random()*count);}
            while(count==0 || count==file.listFiles().length);
            System.out.println(file.toString()+"\\"+count+".png");
            b=poke[count-1];
            monst=new ImageIcon(file.toString()+"\\"+count+".png");
            monsterimg.setIcon(monst);
            fightbutton.setVisible(true);
            leaveButton.setVisible(true);
            found=true;
        }else{
            headerEvento.setText("Você não encontrou nada=/");
            monst= new ImageIcon(System.getProperty("user.dir")+"\\src\\icons\\pokemons\\0.png");
            monsterimg.setIcon(monst);
            fightbutton.setVisible(false);
            leaveButton.setVisible(false);
            found=false;
        }
     }
}
